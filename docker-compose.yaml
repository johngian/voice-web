version: '3'
services:
  db:
    image: bitnami/mysql:5.7
    networks:
      - voice-web
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=voiceweb
      - MYSQL_USER=voicecommons
      - MYSQL_PASSWORD=voicecommons
      - MYSQL_ROOT_PASSWORD=voicewebroot
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=replication
      - MYSQL_REPLICATION_PASSWORD=replication
  db-replica:
    image: bitnami/mysql:5.7
    networks:
      - voice-web
    container_name: db-replica
    restart: unless-stopped
    environment:
      - MYSQL_REPLICATION_MODE=slave
      - MYSQL_REPLICATION_USER=replication
      - MYSQL_REPLICATION_PASSWORD=replication
      - MYSQL_MASTER_HOST=db
      - MYSQL_MASTER_PORT_NUMBER=3306
      - MYSQL_MASTER_ROOT_PASSWORD=voicewebroot
  proxysql:
    image: proxysql/proxysql
    container_name: proxysql
    networks:
      - voice-web
    volumes:
      - ./docker/proxysql.cnf:/etc/proxysql.cnf
  s3proxy:
    image: andrewgaul/s3proxy
    container_name: s3proxy
    networks:
      - voice-web
    environment:
      - S3PROXY_AUTHORIZATION=none
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: web
    links:
      - proxysql
    volumes:
      - .:/code
    environment:
      - SERVER_CONFIG_PATH=/code/docker/local-docker-config.json
    networks:
      - voice-web
    ports:
      - 9000:9000
    command: bash -c "/code/docker/prepare_s3.sh && yarn && yarn start"

networks:
  voice-web:
